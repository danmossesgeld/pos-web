import { c as create_ssr_component, f as add_attribute } from "../../../../chunks/ssr.js";
import "../../../../chunks/firebase.client.js";
import "firebase/firestore";
import "../../../../chunks/client.js";
const css = {
  code: "input.svelte-2fx7uo{transition:all 0.3s ease}input.svelte-2fx7uo:focus{border-color:#3b82f6;box-shadow:0 0 10px rgba(59, 130, 246, 0.3)}.bg-gray-100.svelte-2fx7uo{background-color:#f7fafc}.text-gray-800.svelte-2fx7uo{color:#2d3748}.text-center.svelte-2fx7uo{text-align:center}.max-w-lg.svelte-2fx7uo{max-width:600px}.bg-white.svelte-2fx7uo{background-color:white}.bg-green-500.svelte-2fx7uo{background-color:#10b981}",
  map: '{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script lang=\\"ts\\">import { db } from \\"../../../lib/firebase/firebase.client\\";\\nimport { collection, query, where, getDocs } from \\"firebase/firestore\\";\\nimport { goto } from \\"$app/navigation\\";\\nlet pID = \\"\\";\\nlet itemDetails = null;\\nconst fetchItemDetails = async (pID2) => {\\n  const inventoryCollection = collection(db, \\"Inventory\\");\\n  const itemQuery = query(inventoryCollection, where(\\"pID\\", \\"==\\", pID2));\\n  try {\\n    const snapshot = await getDocs(itemQuery);\\n    if (snapshot.empty) {\\n      alert(\\"Item not found.\\");\\n      itemDetails = null;\\n      return;\\n    }\\n    const item = snapshot.docs[0].data();\\n    itemDetails = {\\n      name: item.name,\\n      srp: item.srp\\n    };\\n  } catch (error) {\\n    console.error(\\"Error fetching item details:\\", error);\\n    alert(\\"There was an error fetching the item details.\\");\\n    itemDetails = null;\\n  }\\n};\\nconst handleKeydown = (event) => {\\n  if (event.key === \\"Enter\\") {\\n    fetchItemDetails(pID);\\n  }\\n};\\nconst addToCart = () => {\\n  if (itemDetails) {\\n    const cartItem = {\\n      pID,\\n      name: itemDetails.name,\\n      srp: itemDetails.srp,\\n      quantity: 1,\\n      // Default quantity is 1\\n      total: itemDetails.srp\\n    };\\n    goto(\\"/user\\");\\n  }\\n};\\n<\/script>\\r\\n  \\r\\n  <!-- Centered Card with Price Check Form -->\\r\\n  <div class=\\"flex items-center justify-center h-screen bg-gray-100\\">\\r\\n    <div class=\\"bg-white p-8 rounded-lg shadow-lg w-full max-w-lg\\">\\r\\n      <h2 class=\\"text-2xl font-semibold mb-6 text-gray-800 text-center\\">Price Check</h2>\\r\\n  \\r\\n      <!-- Form for entering Product ID -->\\r\\n      <div class=\\"mb-6\\">\\r\\n        <input\\r\\n          id=\\"pID\\"\\r\\n          type=\\"text\\"\\r\\n          bind:value={pID}\\r\\n          class=\\"w-full px-4 py-3 text-sm border rounded-md\\"\\r\\n          placeholder=\\"Enter product ID\\"\\r\\n          on:keydown={handleKeydown}\\r\\n        />\\r\\n      </div>\\r\\n  \\r\\n      <!-- Item Details -->\\r\\n      {#if itemDetails}\\r\\n        <div class=\\"text-center mb-6\\">\\r\\n          <p class=\\"text-lg font-semibold mb-2\\">Item Name: {itemDetails.name}</p>\\r\\n          <p class=\\"text-lg font-semibold\\">SRP: ${itemDetails.srp.toFixed(2)}</p>\\r\\n        </div>\\r\\n      {/if}\\r\\n  \\r\\n      <!-- Add to Cart Button -->\\r\\n      <div class=\\"flex justify-center\\">\\r\\n        <button\\r\\n          on:click={addToCart}\\r\\n          class=\\"bg-green-500 text-white px-6 py-3 rounded-lg text-lg\\"\\r\\n        >\\r\\n          Add to Cart\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  <style>\\r\\n    input {\\r\\n      transition: all 0.3s ease;\\r\\n    }\\r\\n  \\r\\n    input:focus {\\r\\n      border-color: #3b82f6;\\r\\n      box-shadow: 0 0 10px rgba(59, 130, 246, 0.3);\\r\\n    }\\r\\n  \\r\\n    .bg-gray-100 {\\r\\n      background-color: #f7fafc;\\r\\n    }\\r\\n  \\r\\n    .text-gray-800 {\\r\\n      color: #2d3748;\\r\\n    }\\r\\n  \\r\\n    .text-center {\\r\\n      text-align: center;\\r\\n    }\\r\\n  \\r\\n    .max-w-lg {\\r\\n      max-width: 600px; /* Adjust the maximum width for the container */\\r\\n    }\\r\\n  \\r\\n    .bg-white {\\r\\n      background-color: white;\\r\\n    }\\r\\n  \\r\\n    .bg-green-500 {\\r\\n      background-color: #10b981;\\r\\n    }\\r\\n  </style>\\r\\n  "],"names":[],"mappings":"AAoFI,mBAAM,CACJ,UAAU,CAAE,GAAG,CAAC,IAAI,CAAC,IACvB,CAEA,mBAAK,MAAO,CACV,YAAY,CAAE,OAAO,CACrB,UAAU,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAC7C,CAEA,0BAAa,CACX,gBAAgB,CAAE,OACpB,CAEA,4BAAe,CACb,KAAK,CAAE,OACT,CAEA,0BAAa,CACX,UAAU,CAAE,MACd,CAEA,uBAAU,CACR,SAAS,CAAE,KACb,CAEA,uBAAU,CACR,gBAAgB,CAAE,KACpB,CAEA,2BAAc,CACZ,gBAAgB,CAAE,OACpB"}'
};
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let pID = "";
  $$result.css.add(css);
  return ` <div class="flex items-center justify-center h-screen bg-gray-100 svelte-2fx7uo"><div class="bg-white p-8 rounded-lg shadow-lg w-full max-w-lg svelte-2fx7uo"><h2 class="text-2xl font-semibold mb-6 text-gray-800 text-center svelte-2fx7uo" data-svelte-h="svelte-lcgh1a">Price Check</h2>  <div class="mb-6"><input id="pID" type="text" class="w-full px-4 py-3 text-sm border rounded-md svelte-2fx7uo" placeholder="Enter product ID"${add_attribute("value", pID, 0)}></div>  ${``}  <div class="flex justify-center"><button class="bg-green-500 text-white px-6 py-3 rounded-lg text-lg svelte-2fx7uo" data-svelte-h="svelte-1t37f69">Add to Cart</button></div></div> </div>`;
});
export {
  Page as default
};
